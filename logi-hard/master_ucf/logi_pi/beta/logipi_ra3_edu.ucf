##========================================================
##    Pin assignments
##    Logi-Pi - Pong Chu book compatible - (work in progress)
##   	- Intended for use the the Logi-Pi and EDU expansion 

##========================================================
##========================================================
## Board Version RA.3
## - Will leave the UCF file name the same for subseguent board
## This will allow for the project to simply be rebuilt without the need
## to restructure.
##========================================================
NET "clk" TNM_NET = clk;
TIMESPEC TS_clk = PERIOD "clk" 50 MHz HIGH 50%;

##========================================================
## clock and reset
##========================================================
NET "clk"    LOC = P85;

##========================================================
## NES controller pins
##========================================================
#NET "nes_clk"  	LOC = P111	|	IOSTANDARD = LVCMOS33;	#PMOD4_2
#NET "nes_lat"  	LOC = P132	|	IOSTANDARD = LVCMOS33;	#PMOD4_3
#NET "nes1_dat"    LOC = P133	|	IOSTANDARD = LVCMOS33;	#PMOD4_10
#NET "nes2_dat"  	LOC = P131	|	IOSTANDARD = LVCMOS33;	#PMOD4_4

##BUTTONS AND SWITHES ARE REVERSED IN ORDER BASED ON FACING THE LOGI-PI UPSIDE DOWN
## THE BUTTON SW ORDERING ARE BIT ORIENTED LSB FROM LEFT TO RIGHT
##========================================================
## Buttons
##========================================================
#NET "btn_n<0>"   LOC = P102;	#checked 140326
#NET "btn_n<1>"   LOC = P101;
#NET "reset_n"  	LOC = P101;	--reset needs to be moved around depending on applicaion, use sw or button

##=========================================================
### 2 slide switches
##==========================================================
## This is how the pins should be laid out.  Needs reversed on PCB					
#NET "sw<0>"  LOC = P99	|	IOSTANDARD = LVCMOS33;
#NET "sw<1>"  LOC = P100	|	IOSTANDARD = LVCMOS33;

###========================================================
### VGA outputs
###========================================================

#RA2
NET "red<0>"  LOC = P116 	| DRIVE=24 | SLEW=FAST	|	IOSTANDARD = LVCMOS33;		//P3_10
NET "red<1>"  LOC = P88 	| DRIVE=24 | SLEW=FAST	|	IOSTANDARD = LVCMOS33;		//P1_7
NET "red<2>"  LOC = P5 	| DRIVE=24 | SLEW=FAST	|	IOSTANDARD = LVCMOS33;		//P1_1

NET "green<0>"  LOC = P123 	| DRIVE=24 | SLEW=FAST	|	IOSTANDARD = LVCMOS33;		//P3_4	
NET "green<1>"  LOC = P92 	| DRIVE=24 | SLEW=FAST	|	IOSTANDARD = LVCMOS33;	//P1_8
NET "green<2>"  LOC = P2 	| DRIVE=24 | SLEW=FAST	|	IOSTANDARD = LVCMOS33;	//P1_2

NET "blue<0>"  LOC = P124 	| DRIVE=24 | SLEW=FAST	|	IOSTANDARD = LVCMOS33;		//P3_3 
NET "blue<1>"  LOC = P93 	| DRIVE=24 | SLEW=FAST	|	IOSTANDARD = LVCMOS33;		//P1_9
NET "blue<2>"  LOC = P1 	| DRIVE=24 | SLEW=FAST	|	IOSTANDARD = LVCMOS33;		//P1_3

NET "vsync"   LOC = P94 	| DRIVE=24 | SLEW=FAST	|	IOSTANDARD = LVCMOS33;	//P1_10
NET "hsync"   LOC = P16  	| DRIVE=24 | SLEW=FAST	|	IOSTANDARD = LVCMOS33;	//P1_4	

#========================================================
# 2 discrete LEDs
#========================================================
#NET "led<0>"  LOC = P105	|	IOSTANDARD = LVCMOS33;
#NET "led<1>"  LOC = P104	|	IOSTANDARD = LVCMOS33;

##========================================================
## PS2 port 1
##========================================================
#NET "ps2c_1" LOC=P115;	##PMOD4-7
#NET "ps2d_1" LOC=P114;	##PMOD4-8

##========================================================
## PS2 port 2
##========================================================
#NET "ps2c_2" LOC=P124	|	IOSTANDARD = LVCMOS33;	##PMOD3_3
#NET "ps2d_2" LOC=P116	|	IOSTANDARD = LVCMOS33;	##PMOD3_10

# This controls segments from 0:3 right to left 
# The transistors are pulling the lines low.  Must not be gate.
#========================================================
# 4-digit time-multiplexed 7-segment LED display
#========================================================
# This is from 3-0 right to left
# digit enable							
#NET "an<3>"  LOC = 	P144	|	IOSTANDARD = LVCMOS33;	#p2_7	
#NET "an<2>"  LOC = 	P142	|	IOSTANDARD = LVCMOS33;  #p2_1	
#NET "an<1>"  LOC = 	P15	|	IOSTANDARD = LVCMOS33;  #p2_3	
#NET "an<0>"  LOC = 	P14	|	IOSTANDARD = LVCMOS33;  #p2_4	
#NET "an_l"   LOC =   P141	|	IOSTANDARD = LVCMOS33;	#p2_2	

# This is wired low bit = a , etc.  the book code is reversed order.
# 7-segment led segments
#NET "sseg<0>"  LOC = P118	|	IOSTANDARD = LVCMOS33; 	# segment a			p3_8
#NET "sseg<1>"  LOC = P119	|	IOSTANDARD = LVCMOS33; 	# segment b			p3_7
#NET "sseg<2>"  LOC = P137	|	IOSTANDARD = LVCMOS33; 	# segment c			p3_2
#NET "sseg<3>"  LOC = P143		|	IOSTANDARD = LVCMOS33; 	# segment d		p2_8
#NET "sseg<4>"  LOC = P140		|	IOSTANDARD = LVCMOS33; 	# segment e		p2_9
#NET "sseg<5>"  LOC = P117	|	IOSTANDARD = LVCMOS33; 	# segment f 		p3_9
#NET "sseg<6>"  LOC = P138	|	IOSTANDARD = LVCMOS33; 	# segment g			p3_1
#NET "sseg<7>"  LOC = P139	|	IOSTANDARD = LVCMOS33; 	# decimal point 	p2_10	

#========================================================
# UART for Rpi
# TX = FGPA TX  = Host RX				
# RX = FPGA RX  = Host TX				
#========================================================
#NET "rx"  LOC =pxx 	|	IOSTANDARD = LVCMOS33;	--use tx on rpi
#NET "tx"  LOC =pxx	|	IOSTANDARD = LVCMOS33;  --use rx on rpi